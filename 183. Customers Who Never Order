# 🗂️ SQL Learning Journey – Customers Who Never Order

## 📌 Problem Statement
You are given two tables:

### **Customers**
| Column Name | Type    |
|-------------|---------|
| id          | int     |
| name        | varchar |

- `id` is the primary key.
- Each row represents a customer's ID and name.

### **Orders**
| Column Name | Type |
|-------------|------|
| id          | int  |
| customerId  | int  |

- `id` is the primary key.
- customerId` is a foreign key referencing `Customers.id`.
- Each row represents an order and the ID of the customer who made it.



## 🎯 Task
Write an SQL query to **find all customers who never placed an order**.

Return the result table in any order.



## ✅ Example

### **Input**
**Customers**
| id | name |
|----|------|
| 1  | Joe  |
| 2  | Henry|
| 3  | Sam  |
| 4  | Max  |

**Orders**
| id | customerId |
|----|------------|
| 1  | 3          |
| 2  | 1          |

### **Output**
| Customers |
|-----------|
| Henry     |
| Max       |


## 💡 Approach
- Use a **LEFT JOIN** to join `Customers` with `Orders` based on `id = customerId`.
- Filter out customers who have no matching order using `WHERE Orders.customerId IS NULL`.



## 📝 SQL Solution

# Write your MySQL query statement below
SELECT name AS Customers
FROM Customers
LEFT JOIN Orders
  ON Customers.id = Orders.customerId 
WHERE Orders.customerId IS NULL;
